<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/2/2017 2:04:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DENLAP-B84BBH2"
  DTS:CreatorName="ANTERO\dmolyneaux"
  DTS:DTSID="{0CAA8CE8-5F51-4F02-A139-F89F344273D6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Load_EDW_Stage_ADP_Employee_Hours"
  DTS:PackageType="5"
  DTS:VersionBuild="133"
  DTS:VersionGUID="{D6D88277-A306-4062-B054-CBA31B8512CB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel_Connection_Adp]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{34F487B2-C359-4DDA-A714-633D53EDA266}"
      DTS:ObjectName="Excel_Connection_Adp">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::Import_File_Path_And_Name]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\testssis01.ad.anteroresources.com\EDWFileShare\Test\Import\AdpEmployeeHours\2017 Hours Summary by Office Location for Safety.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F4B13F0D-45D2-4ECE-8BF2-C4303868295C}"
      DTS:ObjectName="Health_And_Safety_Adp_Archive_File_Path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\\testssis01.ad.anteroresources.com\EDWFileShare\Test\Import\AdpEmployeeHours\Archive\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F82EB150-A1CC-4998-9090-BFC056EA3229}"
      DTS:ObjectName="Health_And_Safety_Adp_File_Feed_Day_Of_Month">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">2</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E396A099-CCFE-49D6-95F9-4C77494D473E}"
      DTS:ObjectName="Health_And_Safety_Adp_Import_File_Path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\\testssis01.ad.anteroresources.com\EDWFileShare\Test\Import\AdpEmployeeHours\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{24AB10E9-A105-4C15-BEAE-129975A12C88}"
      DTS:ObjectName="Health_And_Safety_Adp_Source_File_Path_And_Name">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\\antero\shares\EHS\Environmental\Midstream Programs\Weekly Report - WSR - Midstream Ops\ADP - Employee Hrs\{Year} Hours Summary by Office Location for Safety.xlsx</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FBF0FDD9-D9DA-4F2D-91DE-242FC5CD73DD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Archive_File_Path_And_Name">
      <DTS:VariableValue
        DTS:DataType="8">\\testssis01.ad.anteroresources.com\EDWFileShare\Test\Import\AdpEmployeeHours\Archive\2017 Hours Summary by Office Location for Safety_20171229_103111537.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6EA5CE72-F886-4392-A70E-12A6E9EFD7E9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Current_Day_Of_Month">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3348D85E-F485-4393-A6AB-428E5E557709}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Current_Day_of_Month_2">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{517F1EF6-84D0-4134-8424-28A13CA1DA6B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Import_File_Path_And_Name">
      <DTS:VariableValue
        DTS:DataType="8">\\testssis01.ad.anteroresources.com\EDWFileShare\Test\Import\AdpEmployeeHours\2017 Hours Summary by Office Location for Safety.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{760E8636-E64D-45BD-8152-F64D5CEAA1F9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Is_Projection">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06EC330C-4C6B-455B-931D-011D0105474E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Source_File_Path_And_Name">
      <DTS:VariableValue
        DTS:DataType="8">C:\Projects\Health and Safety\2017 Hours Summary by Office Location for Safety.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get current day of month"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{AA1094D6-B5B1-428C-AB4D-7AA3C4D20F16}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get current day of month"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{92F2A67E-7134-4767-A976-9257324D983A}"
          SQLTask:SqlStatementSource="SELECT CASE when DAY(GETDATE()) &lt;= '7' THEN &#xA;'1' ELSE '2' END AS Current_Day_Of_Month"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="Current_Day_Of_Month"
            SQLTask:DtsVariableName="User::Current_Day_Of_Month" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load file from HR"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{F70394C7-FDA8-4FB3-BA44-BFE768A7CEB4}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load file from HR">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load file from HR\Archive Import file"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{8B89A0CA-CA71-4E2A-AE21-834BE4172793}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Archive Import file"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_59e2acb80302422983e74ff925c0e3c8"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::Archive_File_Path_And_Name,User::Import_File_Path_And_Name">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_59e2acb80302422983e74ff925c0e3c8.Properties.Settings.get_Default():ST_59e2acb80302422983e74ff925c0e3c8.Properties.Sett" +
    "ings")]

namespace ST_59e2acb80302422983e74ff925c0e3c8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_59e2acb80302422983e74ff925c0e3c8
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                string importFilePathAndName = Dts.Variables["User::Import_File_Path_And_Name"].Value.ToString();
                string archiveFilePathAndName = Dts.Variables["User::Archive_File_Path_And_Name"].Value.ToString();

                File.Copy(importFilePathAndName, archiveFilePathAndName);

                File.Delete(importFilePathAndName);
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Archive Import file", ex.Message, "", 0);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_59e2acb80302422983e74ff925c0e3c8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_59e2acb80302422983e74ff925c0e3c8</msb:DisplayName>
    <msb:ProjectId>{CE35BA85-3A59-4441-9937-4D2238A45A5B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_59e2acb80302422983e74ff925c0e3c8.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_59e2acb80302422983e74ff925c0e3c8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_59e2acb80302422983e74ff925c0e3c8")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ST_59e2acb80302422983e74ff925c0e3c8.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CABFF3D3-102B-4669-88A2-19D9954ABE5B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_59e2acb80302422983e74ff925c0e3c8</RootNamespace>
    <AssemblyName>ST_59e2acb80302422983e74ff925c0e3c8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_59e2acb80302422983e74ff925c0e3c8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_59e2acb80302422983e74ff925c0e3c8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_59e2acb80302422983e74ff925c0e3c8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_59e2acb80302422983e74ff925c0e3c8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_59e2acb80302422983e74ff925c0e3c8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_59e2acb80302422983e74ff925c0e3c8.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAG0yzmYAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAHi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwuAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LwAAAAAAAEgAAAACAAUAVCEAAMAMAAABAAAAAAAAABQuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgCAAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoCKBAAAApvEQAACnJBAABwbxIAAApvEwAACm8UAAAKCiUGKBUAAAooFgAACt4mCwIo
EAAACm8XAAAKFnKDAABwB28YAAAKcqsAAHAWbxkAAAom3gACKBAAAAoWbxoAAAoqARAAAAAAAABN
TQAmDwAAAR4CKBsAAAoqHgIoHAAACiqufgEAAAQtHnKtAABw0AMAAAIoHQAACm8eAAAKcx8AAAqA
AQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAiggAAAKKi5zCAAABoADAAAEKgAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA7AMAACN+AABYBAAAuAUAACNTdHJpbmdz
AAAAABAKAAAgAQAAI1VTADALAAAQAAAAI0dVSUQAAABACwAAgAEAACNCbG9iAAAAAAAAAAIAAAFX
HaIBCQMAAAD6ATMAFgAAAQAAACAAAAAFAAAABgAAAAkAAAABAAAAIAAAAAIAAAAQAAAAAQAAAAIA
AAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAJcDAQAAAAAABgBHAo8EBgDWAo8EBgCTAXwEDwAD
BQAABgDAARUEBgAqAhUEBgALAhUEBgC9AhUEBgBnAhUEBgCAAhUEBgDXARUEBgDyAQQDCgCbAkYD
CgALAUYDBgAnBMgDBgDPA8gDBgB2AXwEBgCBBcgDBgBBBK8EBgAxBAAEDgA/AYEDDgCnAYEDDgAn
AesDBgBbAY8ECgBvA0YDEgBFBbYAEgCEALYABgCxAC4ACgBRBEYDBgDWAMgDBgCNAMgDBgCnBRUE
AAAAACUAAAAAAAEAAQABABAA4AMBADkAAQABAAAAEAC2BBIFSQABAAMAAAEQAE8FEgVdAAMABwAD
AQAAaAUAAEEABAAKABEA1AODABEA+wCHABEAaACLAAYGVwCPAFaAWAWSAFaA2wCSAFAgAAAAAIYA
5gMGAAEA7CAAAAAAhhhvBAYAAQD0IAAAAACDGG8EBgABAPwgAAAAAJMIPQSWAAEAKCEAAAAAkwjj
AJsAAQAvIQAAAACTCO8AoAABADchAAAAAJYIiAWmAAIAPiEAAAAAhhhvBAYAAgBGIQAAAACRGHUE
qwACAAAAAQD+AgkAbwQBABEAbwQGABkAbwQKACkAbwQQADEAbwQQADkAbwQQAEEAbwQQAEkAbwQQ
AFEAbwQQAFkAbwQQAGEAbwQQAGkAbwQGAIkAbwQGALEAbwQVAMEAbwQGAHEAYAUhAMkAQQUmANEA
vwMrANkA9AIxAJEAHgM1AOEAsAU5AOEAVAE/AMkAdgVEAHkAeAA1AOkAZQRJAMkAlAUBAHEAbwQG
AJEAbwQGAPEAnwBSAPEAowVZAJkAbwRfALkAbwQGAAgAFAB5AAgAGAB+ACkAcwDmAC4ACwC+AC4A
EwDHAC4AGwDmAC4AIwDvAC4AKwAYAS4AMwAYAS4AOwAYAS4AQwDvAC4ASwAeAS4AUwAYAS4AWwA1
AUMAYwB+AEkAcwDmAGEAewB+AGMAawB+ABsAAwABAAQAAwAAAEEErwAAAAMBtAAAAIwFuQACAAQA
AwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAC0jhmMAAAAAAAABAAAABAAAAAAAAAAAAAAAZwBf
AAAAAAAQAAAAAAAAAAAAAABwACcDAAAAAAQAAAAAAAAAAAAAAGcAyAMAAAAAEAAAAAAAAAAAAAAA
cAA4AAAAAAAAAAAAAQAAAMAEAAAFAAIAAAAAU1RfNTllMmFjYjgwMzAyNDIyOTgzZTc0ZmY5MjVj
MGUzYzgAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2
YWx1ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBSdW50
aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNTllMmFjYjgwMzAyNDIyOTgzZTc0
ZmY5MjVjMGUzYzguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2Jq
ZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNTllMmFjYjgw
MzAyNDIyOTgzZTc0ZmY5MjVjMGUzYzguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERl
YnVnZ2luZ01vZGVzAFNUXzU5ZTJhY2I4MDMwMjQyMjk4M2U3NGZmOTI1YzBlM2M4LlByb3BlcnRp
ZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBn
ZXRfRXZlbnRzAE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkA
Q29weQAAAAAAP1UAcwBlAHIAOgA6AEkAbQBwAG8AcgB0AF8ARgBpAGwAZQBfAFAAYQB0AGgAXwBB
AG4AZABfAE4AYQBtAGUAAEFVAHMAZQByADoAOgBBAHIAYwBoAGkAdgBlAF8ARgBpAGwAZQBfAFAA
YQB0AGgAXwBBAG4AZABfAE4AYQBtAGUAACdBAHIAYwBoAGkAdgBlACAASQBtAHAAbwByAHQAIABm
AGkAbABlAAABAHFTAFQAXwA1ADkAZQAyAGEAYwBiADgAMAAzADAAMgA0ADIAMgA5ADgAMwBlADcA
NABmAGYAOQAyADUAYwAwAGUAMwBjADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAABEpQr01FpqRrj281rP+sC4AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVBQcC
DhI9BCAAEmUEIAASaQUgARJtHAMgABwDIAAOBQACAQ4OBAABAQ4EIAASdQggBQIIDg4OCAYAARJ5
EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhAC
BggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNTllMmFjYjgwMzAy
NDIyOTgzZTc0ZmY5MjVjMGUzYzgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAPQuAAAAAAAAAAAAAA4vAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAALwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCGYy0jAAABAIZjLSM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADUAOQBlADIAYQBjAGIAOAAwADMAMAAyADQAMgAyADkAOAAzAGUANwA0AGYAZgA5
ADIANQBjADAAZQAzAGMAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADAAMAA1AC4AMgA1ADQANwA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADUAOQBlADIAYQBjAGIAOAAwADMAMAAyADQAMgAyADkAOAAzAGUANwA0AGYAZgA5ADIA
NQBjADAAZQAzAGMAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANQA5AGUAMgBhAGMAYgA4ADAAMwAwADIANAAyADIAOQA4ADMAZQA3ADQA
ZgBmADkAMgA1AGMAMABlADMAYwA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADUAOQBlADIAYQBjAGIAOAAwADMAMAAyADQAMgAyADkAOAAzAGUANwA0AGYA
ZgA5ADIANQBjADAAZQAzAGMAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAwADAANQAuADIANQA0ADcAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAwADAANQAuADIANQA0ADcAOAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load file from HR\Copy source file to Import directory"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{74B85948-805E-4E7C-BF98-037E6262F264}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Copy source file to Import directory"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_fa9b76c76f894184a21a262a1d5a97fb"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::Import_File_Path_And_Name,User::Source_File_Path_And_Name">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fa9b76c76f894184a21a262a1d5a97fb.Properties.Settings.get_Default():ST_fa9b76c76f894184a21a262a1d5a97fb.Properties.Sett" +
    "ings")]

namespace ST_fa9b76c76f894184a21a262a1d5a97fb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_fa9b76c76f894184a21a262a1d5a97fb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                string sourceFilePathAndName = Dts.Variables["User::Source_File_Path_And_Name"].Value.ToString();
                string importFilePathAndName = Dts.Variables["User::Import_File_Path_And_Name"].Value.ToString();

                File.Copy(sourceFilePathAndName, importFilePathAndName);
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Copy source file to Import directory", ex.Message, "", 0);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_fa9b76c76f894184a21a262a1d5a97fb.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e7fdd9ac-4c68-4cb2-8763-0e99b551faed}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_fa9b76c76f894184a21a262a1d5a97fb</RootNamespace>
    <AssemblyName>ST_fa9b76c76f894184a21a262a1d5a97fb</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_fa9b76c76f894184a21a262a1d5a97fb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_fa9b76c76f894184a21a262a1d5a97fb</msb:DisplayName>
    <msb:ProjectId>{47653CC9-E74F-42AD-9350-205145FBA506}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_fa9b76c76f894184a21a262a1d5a97fb.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_fa9b76c76f894184a21a262a1d5a97fb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_fa9b76c76f894184a21a262a1d5a97fb")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fa9b76c76f894184a21a262a1d5a97fb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fa9b76c76f894184a21a262a1d5a97fb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_fa9b76c76f894184a21a262a1d5a97fb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_fa9b76c76f894184a21a262a1d5a97fb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_fa9b76c76f894184a21a262a1d5a97fb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_fa9b76c76f894184a21a262a1d5a97fb.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHYyzmYAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAKi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANguAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAMA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAM
LwAAAAAAAEgAAAACAAUAUCEAANAMAAABAAAAAAAAACAuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgB6AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoCKBAAAApvEQAACnJBAABwbxIAAApvEwAACm8UAAAKCgYoFQAACt4mCwIoEAAACm8W
AAAKFnKBAABwB28XAAAKcssAAHAWbxgAAAom3gACKBAAAAoWbxkAAAoqAAABEAAAAAAAAEdHACYP
AAABHgIoGgAACioeAigbAAAKKq5+AQAABC0ecs0AAHDQAwAAAigcAAAKbx0AAApzHgAACoABAAAE
fgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB8AAAoqLnMIAAAGgAMAAAQqAABCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADoAwAAI34AAFQEAACwBQAAI1N0cmluZ3MAAAAA
BAoAAEABAAAjVVMARAsAABAAAAAjR1VJRAAAAFQLAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJ
AwAAAPoBMwAWAAABAAAAIAAAAAUAAAAGAAAACQAAAAEAAAAfAAAAAgAAABAAAAABAAAAAgAAAAMA
AAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAkAMBAAAAAAAGAEACiAQGAM8CiAQGAIwBdQQPAPwEAAAG
ALkBDgQGACMCDgQGAAQCDgQGALYCDgQGAGACDgQGAHkCDgQGANABDgQGAOsB/QIKAJQCPwMKAAsB
PwMGACAEwQMGAMgDwQMGAG8BdQQGAHoFwQMGADoEqAQGACoE+QMOAD8BegMOAKABegMOACcB5AMG
AFQBiAQKAGgDPwMSAD4FtgASAIQAtgAGALEACgAKAEoEPwMGANYAwQMGAI0AwQMGAKAFDgQAAAAA
AQAAAAAAAQABAAEAEADZAzsAOQABAAEAAAAQAK8ECwVJAAEAAwAAARAASAULBV0AAwAHAAMBAABh
BQAAQQAEAAoAEQDNA34AEQD7AIIAEQBoAIYABgYzAIoAVoBRBY0AVoDbAI0AUCAAAAAAhgDfAwYA
AQDoIAAAAACGGGgEBgABAPAgAAAAAIMYaAQGAAEA+CAAAAAAkwg2BJEAAQAkIQAAAACTCOMAlgAB
ACshAAAAAJMI7wCbAAEAMyEAAAAAlgiBBaEAAgA6IQAAAACGGGgEBgACAEIhAAAAAJEYbgSmAAIA
AAABAPcCCQBoBAEAEQBoBAYAGQBoBAoAKQBoBBAAMQBoBBAAOQBoBBAAQQBoBBAASQBoBBAAUQBo
BBAAWQBoBBAAYQBoBBAAaQBoBAYAiQBoBAYAsQBoBBUAwQBoBAYAcQBZBSEAyQA6BSYA0QC4AysA
2QDtAjEAkQAXAzUA4QCpBTkAyQBvBT8AeQB4ADUA6QBeBEQAyQCNBQEAcQBoBAYAkQBoBAYA8QCf
AE0A8QCcBVQAmQBoBFoAuQBoBAYACAAUAHQACAAYAHkAKQBzAOEALgALALkALgATAMIALgAbAOEA
LgAjAOoALgArABMBLgAzABMBLgA7ABMBLgBDAOoALgBLABkBLgBTABMBLgBbADABQwBjAHkASQBz
AOEAYQB7AHkAYwBrAHkAGwADAAEABAADAAAAOgSqAAAAAwGvAAAAhQW0AAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAALSOLYwAAAAAAADsAAAAEAAAAAAAAAAAAAABiAF8AAAAAABAAAAAA
AAAAAAAAAGsAIAMAAAAABAAAAAAAAAAAAAAAYgDBAwAAAAAQAAAAAAAAAAAAAABrABQAAAAAAAAA
AAABAAAAuQQAAAUAAgAAAAAAADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMAdmFsdWVfXwBTVF9mYTliNzZjNzZmODk0MTg0YTIxYTI2MmExZDVhOTdmYgBt
c2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfZmE5Yjc2Yzc2Zjg5NDE4NGEyMWEyNjJhMWQ1YTk3ZmIuZGxs
AGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9u
AEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJl
RXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZmE5Yjc2Yzc2Zjg5NDE4NGEyMWEyNjJh
MWQ1YTk3ZmIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2ZhOWI3NmM3NmY4OTQxODRhMjFhMjYyYTFkNWE5N2ZiLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAE9iamVj
dABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkAQ29weQAAAAA/VQBzAGUA
cgA6ADoAUwBvAHUAcgBjAGUAXwBGAGkAbABlAF8AUABhAHQAaABfAEEAbgBkAF8ATgBhAG0AZQAA
P1UAcwBlAHIAOgA6AEkAbQBwAG8AcgB0AF8ARgBpAGwAZQBfAFAAYQB0AGgAXwBBAG4AZABfAE4A
YQBtAGUAAElDAG8AcAB5ACAAcwBvAHUAcgBjAGUAIABmAGkAbABlACAAdABvACAASQBtAHAAbwBy
AHQAIABkAGkAcgBlAGMAdABvAHIAeQAAAQBxUwBUAF8AZgBhADkAYgA3ADYAYwA3ADYAZgA4ADkA
NAAxADgANABhADIAMQBhADIANgAyAGEAMQBkADUAYQA5ADcAZgBiAC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAs661ssysakmivXcm/TIThgAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERVQUHAg4SPQQgABJlBCAAEmkFIAESbRwDIAAcAyAADgUAAgEODgQgABJ1CCAF
AggODg4IBgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
Ek0DBhJRAwYSEAIGCAMGERQEAAASTQQAABJRBQABARJRBAAAEhADAAABBAgAEk0ECAASUQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9m
YTliNzZjNzZmODk0MTg0YTIxYTI2MmExZDVhOTdmYgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAAvAAAAAAAAAAAAABovAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAMLwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCLYy0jAAABAItjLSM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYAYQA5AGIANwA2AGMANwA2AGYAOAA5ADQAMQA4ADQAYQAyADEAYQAyADYAMgBh
ADEAZAA1AGEAOQA3AGYAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADAAMAA1AC4AMgA1ADQAOAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGYAYQA5AGIANwA2AGMANwA2AGYAOAA5ADQAMQA4ADQAYQAyADEAYQAyADYAMgBhADEA
ZAA1AGEAOQA3AGYAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZgBhADkAYgA3ADYAYwA3ADYAZgA4ADkANAAxADgANABhADIAMQBhADIA
NgAyAGEAMQBkADUAYQA5ADcAZgBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYAYQA5AGIANwA2AGMANwA2AGYAOAA5ADQAMQA4ADQAYQAyADEAYQAyADYA
MgBhADEAZAA1AGEAOQA3AGYAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAwADAANQAuADIANQA0ADgAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAwADAANQAuADIANQA0ADgAMwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAsPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load file from HR\Determine final file paths and names"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{EB8DCB1C-B366-44D2-A743-149AC79400EA}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Determine final file paths and names"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_ab996e0e66a149efa99641339e607b11"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="$Package::Health_And_Safety_Adp_Archive_File_Path,$Package::Health_And_Safety_Adp_Import_File_Path,$Package::Health_And_Safety_Adp_Source_File_Path_And_Name"
              ReadWriteVariables="User::Archive_File_Path_And_Name,User::Import_File_Path_And_Name,User::Source_File_Path_And_Name">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ab996e0e66a149efa99641339e607b11.Properties.Settings.get_Default():ST_ab996e0e66a149efa99641339e607b11.Properties.Sett" +
    "ings")]

namespace ST_ab996e0e66a149efa99641339e607b11.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_ab996e0e66a149efa99641339e607b11
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                string sourceFilePathAndName = Dts.Variables["$Package::Health_And_Safety_Adp_Source_File_Path_And_Name"].Value.ToString();
                string finalSourceFileNameWithoutExtension;
                string finalSourceFileExtension;
                string finalSourceFilePathAndName;
                string importFilePath = Dts.Variables["$Package::Health_And_Safety_Adp_Import_File_Path"].Value.ToString();
                string importFilePathAndName;
                string archiveFilePath = Dts.Variables["$Package::Health_And_Safety_Adp_Archive_File_Path"].Value.ToString();
                string archiveFilePathAndName;

                //determine Source_File_Path_And_Name

                if (DateTime.Now.Month != 1)
                {
                    finalSourceFilePathAndName = sourceFilePathAndName.Replace("{Year}", DateTime.Now.Year.ToString());
                }
                else
                {
                    finalSourceFilePathAndName = sourceFilePathAndName.Replace("{Year}", (DateTime.Now.Year - 1).ToString());
                }

                Dts.Variables["User::Source_File_Path_And_Name"].Value = finalSourceFilePathAndName;

                //determine Import_File_Path_And_Name

                if (!(importFilePath.EndsWith("\\")))
                {
                    importFilePath += "\\";
                }

                finalSourceFileNameWithoutExtension = Path.GetFileNameWithoutExtension(finalSourceFilePathAndName);
                finalSourceFileExtension = Path.GetExtension(finalSourceFilePathAndName);

                importFilePathAndName = importFilePath + finalSourceFileNameWithoutExtension + finalSourceFileExtension;

                Dts.Variables["User::Import_File_Path_And_Name"].Value = importFilePathAndName;

                //determine Archive_File_Path_And_Name

                if (!(archiveFilePath.EndsWith("\\")))
                {
                    archiveFilePath += "\\";
                }

                archiveFilePathAndName = archiveFilePath + finalSourceFileNameWithoutExtension + "_" + DateTime.Now.ToString("yyyyMMdd_HHmmssfff") + finalSourceFileExtension;

                Dts.Variables["User::Archive_File_Path_And_Name"].Value = archiveFilePathAndName;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Determine final file paths and names", ex.Message, "", 0);
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_ab996e0e66a149efa99641339e607b11.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{001EE52C-CC71-453E-973D-2E7F47BFEEBE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ab996e0e66a149efa99641339e607b11</RootNamespace>
    <AssemblyName>ST_ab996e0e66a149efa99641339e607b11</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ab996e0e66a149efa99641339e607b11</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ab996e0e66a149efa99641339e607b11</msb:DisplayName>
    <msb:ProjectId>{062ECD56-EE3A-4BC0-8A48-5A2F7AED8022}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ab996e0e66a149efa99641339e607b11.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ab996e0e66a149efa99641339e607b11")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ab996e0e66a149efa99641339e607b11")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ab996e0e66a149efa99641339e607b11.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ab996e0e66a149efa99641339e607b11.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ab996e0e66a149efa99641339e607b11.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ab996e0e66a149efa99641339e607b11.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ab996e0e66a149efa99641339e607b11.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_ab996e0e66a149efa99641339e607b11.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAH8yzmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAARjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPQyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
MwAAAAAAAEgAAAACAAUAsCIAAIwPAAABAAAAAAAAADwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDQAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApydQAAcG8SAAAKbxMAAApvFAAAChMEAigQAAAKbxEAAApy1wAA
cG8SAAAKbxMAAApvFAAAChMGKBUAAAoTCBIIKBYAAAoXLiUGcjsBAHAoFQAAChMIEggoFwAAChMJ
EgkoGAAACm8ZAAAKDSslBnI7AQBwKBUAAAoTCBIIKBcAAAoXWRMJEgkoGAAACm8ZAAAKDQIoEAAA
Cm8RAAAKckkBAHBvEgAACglvGgAAChEEcokBAHBvGwAACi0OEQRyiQEAcCgcAAAKEwQJKB0AAAoL
CSgeAAAKDBEEBwgoHwAAChMFAigQAAAKbxEAAApyjQEAcG8SAAAKEQVvGgAAChEGcokBAHBvGwAA
Ci0OEQZyiQEAcCgcAAAKEwYbjR4AAAElFhEGoiUXB6IlGHLNAQBwoiUZKBUAAAoTCBIIctEBAHAo
IAAACqIlGgiiKCEAAAoTBwIoEAAACm8RAAAKcvcBAHBvEgAAChEHbxoAAAreKBMKAigQAAAKbyIA
AAoWcjkCAHARCm8jAAAKcoMCAHAWbyQAAAom3gACKBAAAAoWbyUAAAoqQRwAAAAAAAAAAAAAmwEA
AJsBAAAoAAAAEAAAAR4CKCYAAAoqHgIoJwAACiqufgEAAAQtHnKFAgBw0AMAAAIoKAAACm8pAAAK
cyoAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigrAAAKKi5zCAAABoADAAAE
KgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAQAQAACN+AACsBAAAIAYAACNT
dHJpbmdzAAAAAMwKAAD4AgAAI1VTAMQNAAAQAAAAI0dVSUQAAADUDQAAuAEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACMAAAAFAAAABgAAAAkAAAABAAAAKwAAAAIAAAAQAAAA
AQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAMQDAQAAAAAABgBSAu4EBgDhAu4EBgCe
AdsEDwBiBQAABgDLAWsEBgA1AmsEBgAWAmsEBgDIAmsEBgByAmsEBgCLAmsEBgDiAWsEBgD9ARkD
CgCmAnMDCgAdAXMDBgC/APUDBgB9BPUDBgD8A/UDBgCBAdsEBgDnBfUDBgCgBA4FBgCHBFYEDgBR
Aa4DDgCyAa4DDgA5AUEEBgBmAe4ECgCcA3MDEgCkBcgAEgCSAMgABgAlAPUDBgA1A/UDBgA8AzQA
CgCwBHMDBgDoAPUDBgCbAPUDBgAVBmsEAAAAACsAAAAAAAEAAQABABAADQQBADkAAQABAAAAEAAV
BXEFTQABAAMAAAEQAK4FcQVhAAMABwADAQAAxwUAAEUABAAKABEAAQS7ABEADQG/ABEAdgDDAAYG
XQDHAFaAtwXKAFaA7QDKAFAgAAAAAIYAEwQGAAEASCIAAAAAhhjOBAYAAQBQIgAAAACDGM4EBgAB
AFgiAAAAAJMInATOAAEAhCIAAAAAkwj1ANMAAQCLIgAAAACTCAEB2AABAJMiAAAAAJYI7gXeAAIA
miIAAAAAhhjOBAYAAgCiIgAAAACRGNQE4wACAAAAAQATAwkAzgQBABEAzgQGABkAzgQKACkAzgQQ
ADEAzgQQADkAzgQQAEEAzgQQAEkAzgQQAFEAzgQQAFkAzgQQAGEAzgQQAGkAzgQGAJEAzgQGALkA
zgQVAMkAzgQGAHEAvwUrANEAoAUwANkA7AM1AOEA/wI7AJkAMwM/AHkACQZDAHkASgNIAHkAkwRI
AOkAMwM/APEAbgBMAOEACQNSAPEAQQNXAPEA4AVcAPkAJQRiAPkAGARiAPEA4AVnAHkAMwNuAPEA
4AVzANEA1QV5AIEAhgA/AAEBxAR/ANEA+gUBAHEAzgQGAJkAzgQGAAkBrQCIAAkBEQaRAKEAzgSX
AMEAzgQGAAgAFACxAAgAGAC2ACkAcwAeAS4ACwD2AC4AEwD/AC4AGwAeAS4AIwAnAS4AKwBQAS4A
MwBQAS4AOwBQAS4AQwAnAS4ASwBWAS4AUwBQAS4AWwBtAUMAYwC2AEkAcwAeAWEAewC2AGMAawC2
ABsAAwABAAQAAwAAAKAE5wAAABUB7AAAAPIF8QACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAA
AQAAAC0jj2MAAAAAAAABAAAABAAAAAAAAAAAAAAAnwBlAAAAAAAQAAAAAAAAAAAAAACoAFQDAAAA
AAQAAAAAAAAAAAAAAJ8A9QMAAAAAEAAAAAAAAAAAAAAAqAA+AAAAAAAAAAAAAQAAAB8FAAAFAAIA
AAAAU1RfYWI5OTZlMGU2NmExNDllZmE5OTY0MTMzOWU2MDdiMTEASW50MzIAPE1vZHVsZT4AU3lz
dGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJl
cGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVy
ZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAEVuZHNXaXRoAGdldF9Nb250aABN
aWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFz
a3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
YWI5OTZlMGU2NmExNDllZmE5OTY0MTMzOWU2MDdiMTEuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVt
AHJlc291cmNlTWFuAFNjcmlwdE1haW4AR2V0RXh0ZW5zaW9uAEdldEZpbGVOYW1lV2l0aG91dEV4
dGVuc2lvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8AZ2V0X1llYXIAZ2V0X1Jlc291cmNlTWFu
YWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9hYjk5NmUwZTY2YTE0OWVmYTk5NjQxMzM5ZTYwN2IxMS5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYWI5OTZlMGU2NmExNDllZmE5OTY0MTMzOWU2
MDdiMTEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBT
Y3JpcHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFz
a1Jlc3VsdABnZXRfTm93AGdldF9Bc3NlbWJseQAAAABzJABQAGEAYwBrAGEAZwBlADoAOgBIAGUA
YQBsAHQAaABfAEEAbgBkAF8AUwBhAGYAZQB0AHkAXwBBAGQAcABfAFMAbwB1AHIAYwBlAF8ARgBp
AGwAZQBfAFAAYQB0AGgAXwBBAG4AZABfAE4AYQBtAGUAAGEkAFAAYQBjAGsAYQBnAGUAOgA6AEgA
ZQBhAGwAdABoAF8AQQBuAGQAXwBTAGEAZgBlAHQAeQBfAEEAZABwAF8ASQBtAHAAbwByAHQAXwBG
AGkAbABlAF8AUABhAHQAaAAAYyQAUABhAGMAawBhAGcAZQA6ADoASABlAGEAbAB0AGgAXwBBAG4A
ZABfAFMAYQBmAGUAdAB5AF8AQQBkAHAAXwBBAHIAYwBoAGkAdgBlAF8ARgBpAGwAZQBfAFAAYQB0
AGgAAA17AFkAZQBhAHIAfQAAP1UAcwBlAHIAOgA6AFMAbwB1AHIAYwBlAF8ARgBpAGwAZQBfAFAA
YQB0AGgAXwBBAG4AZABfAE4AYQBtAGUAAANcAAA/VQBzAGUAcgA6ADoASQBtAHAAbwByAHQAXwBG
AGkAbABlAF8AUABhAHQAaABfAEEAbgBkAF8ATgBhAG0AZQAAA18AACV5AHkAeQB5AE0ATQBkAGQA
XwBIAEgAbQBtAHMAcwBmAGYAZgAAQVUAcwBlAHIAOgA6AEEAcgBjAGgAaQB2AGUAXwBGAGkAbABl
AF8AUABhAHQAaABfAEEAbgBkAF8ATgBhAG0AZQAASUQAZQB0AGUAcgBtAGkAbgBlACAAZgBpAG4A
YQBsACAAZgBpAGwAZQAgAHAAYQB0AGgAcwAgAGEAbgBkACAAbgBhAG0AZQBzAAABAHFTAFQAXwBh
AGIAOQA5ADYAZQAwAGUANgA2AGEAMQA0ADkAZQBmAGEAOQA5ADYANAAxADMAMwA5AGUANgAwADcA
YgAxADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAB/uW9KUfe7
RqsdbsP4ZaPWAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZDwcLDg4ODg4ODg4RPQgSQQQgABJp
BCAAEm0FIAEScRwDIAAcAyAADgQAABE9AyAACAUgAg4ODgQgAQEcBCABAg4FAAIODg4EAAEODgYA
Aw4ODg4EIAEODgUAAQ4dDgUgABKAgQggBQIIDg4OCAgAARKAhRGAiQUgABKAjQcgAgEOEoCNCLd6
XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJVBQAB
ARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hYjk5NmUwZTY2YTE0OWVmYTk5NjQxMzM5ZTYwN2Ix
MQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAHDMAAAAAAAAAAAAANjMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgzAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAj2MtIwAAAQCPYy0jPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBhAGIAOQA5ADYAZQAwAGUANgA2AGEAMQA0ADkAZQBmAGEAOQA5ADYANAAxADMAMwA5
AGUANgAwADcAYgAxADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OQAwADAANQAuADIANQA0ADgANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBhAGIAOQA5ADYAZQAwAGUANgA2AGEAMQA0ADkAZQBmAGEAOQA5ADYANAAxADMAMwA5AGUA
NgAwADcAYgAxADEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGEAYgA5ADkANgBlADAAZQA2ADYAYQAxADQAOQBlAGYAYQA5ADkANgA0ADEA
MwAzADkAZQA2ADAANwBiADEAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwBhAGIAOQA5ADYAZQAwAGUANgA2AGEAMQA0ADkAZQBmAGEAOQA5ADYANAAxADMA
MwA5AGUANgAwADcAYgAxADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADkAMAAwADUALgAyADUANAA4ADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMAAwADUALgAyADUANAA4ADcAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAASDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load file from HR\Load history table from file"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6107D1C2-0294-41FA-8A8B-B9CC840E71E8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load history table from file"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{92F2A67E-7134-4767-A976-9257324D983A}"
              SQLTask:SqlStatementSource="EXEC [Stage_Persistent].[Update_Adp_Employee_Hours_By_Location]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load file from HR\Load staging table"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{CAB2CD49-AA2C-4BAB-B9D2-D3D952ACC1C3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load staging table"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load file from HR\Load staging table\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Location]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Location"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Location]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Days Worked in Month]"
                          cachedDataType="r8"
                          cachedName="Days Worked in Month"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Days Worked in Month]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Hours Per Day]"
                          cachedDataType="r8"
                          cachedName="Hours Per Day"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Hours Per Day]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Number of Regular FT Employees]"
                          cachedDataType="r8"
                          cachedName="Number of Regular FT Employees"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Number of Regular FT Employees]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Regular Hours Worked per Month]"
                          cachedDataType="r8"
                          cachedName="Regular Hours Worked per Month"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Regular Hours Worked per Month]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Overtime Hours]"
                          cachedDataType="r8"
                          cachedName="Overtime Hours"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Overtime Hours]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Total Worked Hours]"
                          cachedDataType="r8"
                          cachedName="Total Worked Hours"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Total Worked Hours]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Month]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Month"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Month]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Location_dc]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Location_dc]"
                          name="Location_dc"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Location]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Days_Worked_In_Month_dc]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Days_Worked_In_Month_dc]"
                          name="Days_Worked_In_Month_dc"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Days Worked in Month]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Hours_Per_Day_dc]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Hours_Per_Day_dc]"
                          name="Hours_Per_Day_dc"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Hours Per Day]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Number_Of_Regular_Full_Time_Employees_dc]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Number_Of_Regular_Full_Time_Employees_dc]"
                          name="Number_Of_Regular_Full_Time_Employees_dc"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Number of Regular FT Employees]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Regular_Hours_Worked_Per_Month_dc]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Regular_Hours_Worked_Per_Month_dc]"
                          name="Regular_Hours_Worked_Per_Month_dc"
                          precision="18"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Regular Hours Worked per Month]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Overtime_Hours_dc]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Overtime_Hours_dc]"
                          name="Overtime_Hours_dc"
                          precision="18"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Overtime Hours]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Total_Worked_Hours_dc]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Total_Worked_Hours_dc]"
                          name="Total_Worked_Hours_dc"
                          precision="18"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Total Worked Hours]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Month_dc]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Month_dc]"
                          name="Month_dc"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Month]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load file from HR\Load staging table\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load file from HR\Load staging table\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Derived Column.Inputs[Derived Column Input].Columns[Month_Number]"
                          cachedDataType="i4"
                          cachedName="Month_Number"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0].Columns[Month_Number]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0].Columns[Month_Number]} != 0 ? #{Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0].Columns[Month_Number]} : NULL(DT_I4)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">Month_Number != 0 ? Month_Number : NULL(DT_I4)</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Load file from HR\Load staging table\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output].Columns[ETL_Load_Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="23"
                          lineageId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output].Columns[ETL_Load_Date]"
                          name="ETL_Load_Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[LEFT]((DT_WSTR,30)[GETDATE](),23)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">LEFT((DT_WSTR,30)GETDATE(),23)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output].Columns[Is_Projection]"
                          dataType="bool"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output].Columns[Is_Projection]"
                          name="Is_Projection"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::Is_Projection]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::Is_Projection]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Load file from HR\Load staging table\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load file from HR\Load staging table\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'Report Feed$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load file from HR\Load staging table\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel_Connection_Adp]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel_Connection_Adp]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Location]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Location]"
                          length="255"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Location]"
                          name="Location"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Days Worked in Month]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Days Worked in Month]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Days Worked in Month]"
                          name="Days Worked in Month"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Hours Per Day]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hours Per Day]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Hours Per Day]"
                          name="Hours Per Day"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Number of Regular FT Employees]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of Regular FT Employees]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Number of Regular FT Employees]"
                          name="Number of Regular FT Employees"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Regular Hours Worked per Month]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Regular Hours Worked per Month]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Regular Hours Worked per Month]"
                          name="Regular Hours Worked per Month"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Overtime Hours]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Overtime Hours]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Overtime Hours]"
                          name="Overtime Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Total Worked Hours]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Worked Hours]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Total Worked Hours]"
                          name="Total Worked Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                          length="255"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                          name="Month"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Year]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Year]"
                          name="Year"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Location]"
                          dataType="wstr"
                          length="255"
                          name="Location" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Days Worked in Month]"
                          dataType="r8"
                          name="Days Worked in Month" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Hours Per Day]"
                          dataType="r8"
                          name="Hours Per Day" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of Regular FT Employees]"
                          dataType="r8"
                          name="Number of Regular FT Employees" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Regular Hours Worked per Month]"
                          dataType="r8"
                          name="Regular Hours Worked per Month" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Overtime Hours]"
                          dataType="r8"
                          name="Overtime Hours" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Worked Hours]"
                          dataType="r8"
                          name="Total Worked Hours" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                          dataType="wstr"
                          length="255"
                          name="Month" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                          dataType="r8"
                          name="Year" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Location]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Location]"
                          name="Location" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Days Worked in Month]"
                          dataType="r8"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Days Worked in Month]"
                          name="Days Worked in Month" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Hours Per Day]"
                          dataType="r8"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Hours Per Day]"
                          name="Hours Per Day" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Number of Regular FT Employees]"
                          dataType="r8"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Number of Regular FT Employees]"
                          name="Number of Regular FT Employees" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Regular Hours Worked per Month]"
                          dataType="r8"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Regular Hours Worked per Month]"
                          name="Regular Hours Worked per Month" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Overtime Hours]"
                          dataType="r8"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Overtime Hours]"
                          name="Overtime Hours" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Total Worked Hours]"
                          dataType="r8"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Total Worked Hours]"
                          name="Total Worked Hours" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Month]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Month]"
                          name="Month" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Year]"
                          dataType="r8"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[Year]"
                          name="Year" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load file from HR\Load staging table\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Stage].[Adp_Employee_Hours_By_Location]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load file from HR\Load staging table\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{BB94BCAC-7336-469A-8BB9-CF77F4EE501B}:invalid"
                      connectionManagerRefId="{BB94BCAC-7336-469A-8BB9-CF77F4EE501B}:invalid"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ETL_Load_Date]"
                          cachedDataType="wstr"
                          cachedLength="23"
                          cachedName="ETL_Load_Date"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ETL_Load_Date]"
                          lineageId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output].Columns[ETL_Load_Date]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Location_dc]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Location_dc"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Location_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Days_Worked_In_Month_dc]"
                          cachedDataType="i4"
                          cachedName="Days_Worked_In_Month_dc"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Days_Worked_In_Month]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Days_Worked_In_Month_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Hours_Per_Day_dc]"
                          cachedDataType="i4"
                          cachedName="Hours_Per_Day_dc"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Hours_Per_Day]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Hours_Per_Day_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Number_Of_Regular_Full_Time_Employees_dc]"
                          cachedDataType="i4"
                          cachedName="Number_Of_Regular_Full_Time_Employees_dc"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Number_Of_Regular_Full_Time_Employees]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Number_Of_Regular_Full_Time_Employees_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Year]"
                          cachedDataType="r8"
                          cachedName="Year"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Hours_Year]"
                          lineageId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output].Columns[Year]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Month_dc]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Month_dc"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Hours_Month_Name]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Month_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Month_Number]"
                          cachedDataType="i4"
                          cachedName="Month_Number"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Hours_Month_Number]"
                          lineageId="Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0].Columns[Month_Number]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Regular_Hours_Worked_Per_Month_dc]"
                          cachedDataType="numeric"
                          cachedName="Regular_Hours_Worked_Per_Month_dc"
                          cachedPrecision="18"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Regular_Hours]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Regular_Hours_Worked_Per_Month_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Overtime_Hours_dc]"
                          cachedDataType="numeric"
                          cachedName="Overtime_Hours_dc"
                          cachedPrecision="18"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Overtime_Hours]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Overtime_Hours_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total_Worked_Hours_dc]"
                          cachedDataType="numeric"
                          cachedName="Total_Worked_Hours_dc"
                          cachedPrecision="18"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Total_Hours]"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Total_Worked_Hours_dc]" />
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Is_Projection]"
                          cachedDataType="bool"
                          cachedName="Is_Projection"
                          externalMetadataColumnId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Is_Projection]"
                          lineageId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output].Columns[Is_Projection]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Location]"
                          dataType="wstr"
                          length="255"
                          name="Location" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Days_Worked_In_Month]"
                          dataType="i4"
                          name="Days_Worked_In_Month" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Hours_Per_Day]"
                          dataType="i4"
                          name="Hours_Per_Day" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Number_Of_Regular_Full_Time_Employees]"
                          dataType="i4"
                          name="Number_Of_Regular_Full_Time_Employees" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ETL_Load_Date]"
                          dataType="dbTimeStamp"
                          name="ETL_Load_Date" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Hours_Year]"
                          dataType="i4"
                          name="Employee_Hours_Year" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Hours_Month_Name]"
                          dataType="wstr"
                          length="255"
                          name="Employee_Hours_Month_Name" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Hours_Month_Number]"
                          dataType="ui1"
                          name="Employee_Hours_Month_Number" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Regular_Hours]"
                          dataType="numeric"
                          name="Employee_Regular_Hours"
                          precision="18"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Overtime_Hours]"
                          dataType="numeric"
                          name="Employee_Overtime_Hours"
                          precision="18"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Employee_Total_Hours]"
                          dataType="numeric"
                          name="Employee_Total_Hours"
                          precision="18"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Is_Projection]"
                          dataType="bool"
                          name="Is_Projection" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load file from HR\Load staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load file from HR\Load staging table\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (!(String.IsNullOrEmpty(Row.Monthdc)))
        {
            Row.MonthNumber = DateTime.Parse(Row.Monthdc + " 01, 1900").Month;
        }       
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Monthdc
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Monthdc_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 MonthNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool MonthNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bde23dceb4e7416b814813daa064ba74.Properties.Settings.get_Default():SC_bde23dceb4e7416b814813daa064ba74.Properties.Sett" +
    "ings")]

namespace SC_bde23dceb4e7416b814813daa064ba74.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bde23dceb4e7416b814813daa064ba74.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7D89842B-BDFC-45E6-BA59-A65ADC9EA3F6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bde23dceb4e7416b814813daa064ba74</RootNamespace>
    <AssemblyName>SC_bde23dceb4e7416b814813daa064ba74</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_bde23dceb4e7416b814813daa064ba74</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_bde23dceb4e7416b814813daa064ba74</msb:DisplayName>
    <msb:ProjectId>{EFA91593-0C4D-46B0-96C9-C2351A27ABF7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_bde23dceb4e7416b814813daa064ba74.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bde23dceb4e7416b814813daa064ba74")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_bde23dceb4e7416b814813daa064ba74")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bde23dceb4e7416b814813daa064ba74.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bde23dceb4e7416b814813daa064ba74.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bde23dceb4e7416b814813daa064ba74.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bde23dceb4e7416b814813daa064ba74.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bde23dceb4e7416b814813daa064ba74.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bde23dceb4e7416b814813daa064ba74.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIEyzmYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAWjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAgyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
MgAAAAAAAEgAAAACAAUA3CEAAHQPAAABAAAAAAAAAFAxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAMQAAAAEAABEDbwYAAAYo
EgAACi0jAwNvBgAABnIBAABwKBMAAAooFAAACgoSACgVAAAKbwgAAAYqHgIoDAAABioqAgMEBSgW
AAAKKlICexcAAAoCexgAAAoWlG8ZAAAKKiICFigaAAAKKjoCFwOMHAAAASgbAAAKKloDLAgCFygc
AAAKKnIVAABwcx0AAAp6HgIoHgAACioeAigfAAAKKn4CKCAAAAoCAnMQAAAGfQEAAAQCAnMRAAAG
fQIAAAQqkgRysgAAcBpvIQAACiwVAgUCAygiAAAKDgRzBQAABm8OAAAGKkorBwIDbw8AAAYDbwoA
AAYt8SoGKjoCKCMAAAoCA30DAAAEKjoCKCMAAAoCA30EAAAEKh4CKCMAAAoqrn4FAAAELR5ywgAA
cNAHAAACKCQAAApvJQAACnMmAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIo
JwAACioucxcAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAJAF
AAAjfgAA/AUAAHAGAAAjU3RyaW5ncwAAAABsDAAANAEAACNVUwCgDQAAEAAAACNHVUlEAAAAsA0A
AMQBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAhAAAACAAAAAcAAAAYAAAA
DwAAACcAAAAQAAAAAQAAAAMAAAAHAAAACAAAAAEAAAAEAAAAAQAAAAAAGAMBAAAAAAAGAAUCkQQG
AJkCkQQGAFEBfgQPAAUFAAAGAH4BwwMGAOgBwwMGAMkBwwMGAIACwwMGACUCwwMGAD4CwwMGAJUB
wwMGALAB1AIKAFkCmAAGAI8AewMKAFAEmAAOAEEEmAAKAAwEmAAKANIFmAAGAJUFewMGADQBfgQG
AGEEsQQGAAAErgMSAAQBAgMSAGUBAgMSAOYAmQMGABkBkQQGAPECewMGAAEAewMGANUDewMGAO8D
ewMGALkAewMGAGEAewMGAFcGwwMAAAAAKwAAAAAAAQABAAEAEACOAwAAEAABAAEAAQAQADQEAAA9
AAEABQABABAAtAUAAEkAAQAMAAEAEACCBQAATQADABAAAQAQAEMFAABNAAQAEQAAABAAuAQUBU0A
BQASAAABEAByBRQFZQAHABYABgCCBZAABgBDBZQAAQDCBZgAAQDCBZgAEQCCA5wAEQDWAKAAEQBR
AKQAUCAAAAAAxgC3AgYAAQBYIAAAAADGAMICBgABAGAgAAAAAMYANAaoAAEAnSAAAAAAhhhxBAYA
AgClIAAAAACGGHEENQACALAgAAAAAIYIRQCuAAUAxSAAAAAAhghAA1cABQDOIAAAAACGCCQEAQAF
AN0gAAAAAIYIUwOyAAYA9CAAAAAAhgBLBlcABwD8IAAAAACGAJwFVwAHAAQhAAAAAIYYcQQGAAcA
JCEAAAAAxgAnBrcABwBJIQAAAADGASAGqAALAFwhAAAAAMYBNAaoAAwAXiEAAAAAhhhxBMEADQBt
IQAAAACGGHEEwQAOAHwhAAAAAIMYcQQGAA8AhCEAAAAAkwhdBMcADwCwIQAAAACTCL4AzAAPALch
AAAAAJMIygDRAA8AvyEAAAAAlgioBdcAEADGIQAAAACGGHEEBgAQAM4hAAAAAJEYdwTcABAAAAAB
AE8GAAABAFYEAAACAE0FAAADABoEAAABAM4CAAABAM4CAAABADQAAAACAIUAAAADAFYEAAAEABoE
AAABAFYEAAABAE8GAAABANgFAAABANgFAAABAM4CCQBxBAEAEQBxBAYAGQBxBAoAKQBxBBAAMQBx
BBAAOQBxBBAAQQBxBBAASQBxBBAAUQBxBBAAWQBxBBAAYQBxBBAAaQBxBAYAoQBxBAYAwQBxBBUA
0QBxBAYAkQC3AgYAkQDCAgYA2QBgBiAA2QCOBSUAcQD+ACsAcQD4AjEAeQBxBDUAeQBWBD8AeQBN
BUMAgQDuAkcAeQBjA0wAeQByA1EAeQBqAwEA6QBxBBAAeQBLBlcAeQCcBVcAkQBxBAYA2QB7BVsA
kQBhBWIAmQBxBAYA+QBzAGgA+QBTBnAAqQBxBHYAyQBxBAYALgALAPsALgATAAQBLgAbACMBLgAj
ACwBLgArAFUBLgAzAFUBLgA7AFUBLgBDACwBLgBLAFsBLgBTAFUBLgBbAHIBQwBjALwBqQBzACMB
yQBzACMB4QB7ALwB4wBrALwBGwADAAEABwAFAAgABwAAAEkA4AAAAEQD5AAAACgE6AAAAFcD5AAA
AGEE7AAAAN4A8QAAAKwF9gACAAYAAwACAAcABQABAAgABwABAAkACQACABMACwACABQADQABABUA
DQACABYADwAEgAAAAQAAAAAAAAAAAAAAAAAHAAAABAAAAAAAAAAAAAAAfgA8AAAAAAAQAAAAAAAA
AAAAAACHAOIFAAAAABAAAAAAAAAAAAAAAIcA/wUAAAAABAAAAAAAAAAAAAAAfgB7AwAAAAAAAAAA
AQAAAMIEAAAAAAAAAEludDMyAFNDX2JkZTIzZGNlYjRlNzQxNmI4MTQ4MTNkYWEwNjRiYTc0ADxN
b2R1bGU+AElucHV0SUQAbXNjb3JsaWIAZ2V0X01vbnRoZGMAZGVmYXVsdEluc3RhbmNlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBEYXRlVGltZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBQYXJzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAGdldF9Nb250aABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAU0NfYmRlMjNkY2ViNGU3NDE2YjgxNDgxM2RhYTA2NGJhNzQuZGxsAGdldF9Nb250aGRj
X0lzTnVsbABzZXRfTW9udGhOdW1iZXJfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJl
c291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdD
b21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAHNldF9Nb250aE51
bWJlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJj
ZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfYmRlMjNkY2ViNGU3NDE2YjgxNDgx
M2RhYTA2NGJhNzQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNDX2JkZTIzZGNlYjRlNzQxNmI4MTQ4MTNkYWEwNjRiYTc0LlByb3BlcnRpZXMAVmFyaWFibGVz
AEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29u
bmVjdGlvbnMAQ29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9u
ZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lu
cHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkASXNOdWxsT3JF
bXB0eQAAAAATIAAwADEALAAgADEAOQAwADAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0
AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMA
cwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBu
AHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGIAZABlADIAMwBkAGMAZQBiADQA
ZQA3ADQAMQA2AGIAOAAxADQAOAAxADMAZABhAGEAMAA2ADQAYgBhADcANAAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAeFv4F9JAIUaTeVjXe4NDIAAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERXQQHARE5BAABAg4FAAIODg4FAAEROQ4DIAAICSADARJBHQgSRQMGEkED
Bh0IBCABDggEIAECCAUgAgEIHAMgAAIGIAICDhF5BSABHQgIBwABEn0RgIEFIAASgIUHIAIBDhKA
hQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSSQMGElUDBhJZAwYSIAUgAQESDAMgAA4EIAEB
AgkgBAEIDhJBEkUFIAEBEkkEAAASVQQAABJZBQABARJZBAAAEiADAAABAygADgMoAAIDKAAIBAgA
ElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19iZGUyM2RjZWI0ZTc0MTZiODE0ODEzZGFhMDY0YmE3NAAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADAy
AAAAAAAAAAAAAEoyAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8MgAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBiAGQAZQAyADMAZABjAGUAYgA0AGUANwA0ADEANgBiADgAMQA0ADgAMQAzAGQAYQBh
ADAANgA0AGIAYQA3ADQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGIAZABlADIAMwBk
AGMAZQBiADQAZQA3ADQAMQA2AGIAOAAxADQAOAAxADMAZABhAGEAMAA2ADQAYgBhADcANAAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYgBk
AGUAMgAzAGQAYwBlAGIANABlADcANAAxADYAYgA4ADEANAA4ADEAMwBkAGEAYQAwADYANABiAGEA
NwA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGIAZABl
ADIAMwBkAGMAZQBiADQAZQA3ADQAMQA2AGIAOAAxADQAOAAxADMAZABhAGEAMAA2ADQAYgBhADcA
NAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAXDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bde23dceb4e7416b814813daa064ba74</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">8c5f417e0c96194759be6e32bb6757d1</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">ED</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Load file from HR\Load staging table\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load file from HR\Load staging table\Script Component.Inputs[Input 0].Columns[Month_dc]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Month_dc"
                          lineageId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Month_dc]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Load file from HR\Load staging table\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0].Columns[Month_Number]"
                          dataType="i4"
                          lineageId="Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0].Columns[Month_Number]"
                          name="Month_Number" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load file from HR\Load staging table.Paths[Data Conversion Output]"
                  endId="Package\Load file from HR\Load staging table\Script Component.Inputs[Input 0]"
                  name="Data Conversion Output"
                  startId="Package\Load file from HR\Load staging table\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load file from HR\Load staging table.Paths[Derived Column Output]"
                  endId="Package\Load file from HR\Load staging table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Derived Column Output"
                  startId="Package\Load file from HR\Load staging table\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Load file from HR\Load staging table.Paths[Excel Source Output]"
                  endId="Package\Load file from HR\Load staging table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Load file from HR\Load staging table\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Load file from HR\Load staging table.Paths[Output 0]"
                  endId="Package\Load file from HR\Load staging table\Derived Column.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Load file from HR\Load staging table\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load file from HR\Truncate staging table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{31179F94-21B4-4C2E-BE7C-73A3DD8DA777}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate staging table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BB94BCAC-7336-469A-8BB9-CF77F4EE501B}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE [Stage].[Adp_Employee_Hours_By_Location]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load file from HR.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{550D6362-7735-407B-98AF-D3CB2C35D83F}"
          DTS:From="Package\Load file from HR\Determine final file paths and names"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Load file from HR\Copy source file to Import directory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load file from HR.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{165D0FD0-653F-4FAB-9D63-FC69BE80F84F}"
          DTS:From="Package\Load file from HR\Copy source file to Import directory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Load file from HR\Truncate staging table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load file from HR.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E481F9D5-3F4F-4855-895A-118210CC5778}"
          DTS:From="Package\Load file from HR\Truncate staging table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Load file from HR\Load staging table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load file from HR.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{85B722CE-5932-4873-A4D8-C764A6028A7C}"
          DTS:From="Package\Load file from HR\Load staging table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Load file from HR\Load history table from file" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load file from HR.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{95ABAF54-C10A-4F02-BBB3-2D86BC1D7E26}"
          DTS:From="Package\Load file from HR\Load history table from file"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Load file from HR\Archive Import file" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load projections"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{04033149-3304-4626-AD4D-E07E1A034B63}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load projections">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load projections\Load history table with projections"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0508A251-59D1-4C15-8C73-30A3D5B608CB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load history table with projections"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{92F2A67E-7134-4767-A976-9257324D983A}"
              SQLTask:SqlStatementSource="EXEC [Stage_Persistent].[Update_Adp_Employee_Hours_By_Location_Projection]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3CFD03BD-546F-4CBD-A350-306CB22AC5BE}"
      DTS:EvalOp="3"
      DTS:Expression="LTRIM(RTRIM(@[User::Current_Day_Of_Month])) ==   @[$Package::Health_And_Safety_Adp_File_Feed_Day_Of_Month]"
      DTS:From="Package\Get current day of month"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load file from HR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3645D872-876E-4438-AFBD-233546F07140}"
      DTS:EvalOp="3"
      DTS:Expression="@[User::Current_Day_Of_Month] !=  @[$Package::Health_And_Safety_Adp_File_Feed_Day_Of_Month]"
      DTS:From="Package\Get current day of month"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load projections" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="199,42"
          Id="Package\Get current day of month"
          TopLeft="374,17" />
        <NodeLayout
          Size="260,42"
          Id="Package\Load file from HR\Archive Import file"
          TopLeft="22.6666489177289,352.066668574545" />
        <NodeLayout
          Size="254,42"
          Id="Package\Load file from HR\Copy source file to Import directory"
          TopLeft="23,88" />
        <NodeLayout
          Size="257,42"
          Id="Package\Load file from HR\Determine final file paths and names"
          TopLeft="21,22" />
        <NodeLayout
          Size="260,42"
          Id="Package\Load file from HR\Load history table from file"
          TopLeft="22,287" />
        <NodeLayout
          Size="165,42"
          Id="Package\Load file from HR\Load staging table"
          TopLeft="22,222" />
        <NodeLayout
          Size="256,42"
          Id="Package\Load file from HR\Truncate staging table"
          TopLeft="25,156" />
        <EdgeLayout
          Id="Package\Load file from HR.PrecedenceConstraints[Constraint]"
          TopLeft="149.75,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load file from HR.PrecedenceConstraints[Constraint 1]"
          TopLeft="151.5,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load file from HR.PrecedenceConstraints[Constraint 2]"
          TopLeft="153,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-48.5,24"
              Start="0,0"
              End="-48.5,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8"
                    Point2="0,12"
                    Point3="-4,12" />
                  <mssgle:LineSegment
                    End="-44.5,12" />
                  <mssgle:CubicBezierSegment
                    Point1="-44.5,12"
                    Point2="-48.5,12"
                    Point3="-48.5,16" />
                  <mssgle:LineSegment
                    End="-48.5,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load file from HR.PrecedenceConstraints[Constraint 3]"
          TopLeft="104.5,264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="47.5,23"
              Start="0,0"
              End="47.5,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.5"
                    Point2="0,11.5"
                    Point3="4,11.5" />
                  <mssgle:LineSegment
                    End="43.5,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="43.5,11.5"
                    Point2="47.5,11.5"
                    Point3="47.5,15.5" />
                  <mssgle:LineSegment
                    End="47.5,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load file from HR.PrecedenceConstraints[Constraint 4]"
          TopLeft="152.333324458864,329">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.066668574545"
              Start="0,0"
              End="0,15.566668574545">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.566668574545" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="308,449"
          Size="308,492"
          Id="Package\Load file from HR"
          TopLeft="146,115" />
        <NodeLayout
          Size="244,42"
          Id="Package\Load projections\Load history table with projections"
          TopLeft="28,32" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="305,107"
          Size="305,150"
          Id="Package\Load projections"
          TopLeft="551,116" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="441.666666666667,59">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-141.666666666667,56"
              Start="0,0"
              End="-141.666666666667,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6679960119641" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.6679960119641"
                    Point2="0,22.6679960119641"
                    Point3="-4,22.6679960119641" />
                  <mssgle:LineSegment
                    End="-137.666666666667,22.6679960119641" />
                  <mssgle:CubicBezierSegment
                    Point1="-137.666666666667,22.6679960119641"
                    Point2="-141.666666666667,22.6679960119641"
                    Point3="-141.666666666667,26.6679960119641" />
                  <mssgle:LineSegment
                    End="-141.666666666667,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-78.8333333333333,27.6679960119641,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="505.333333333333,59">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="198.166666666667,57"
              Start="0,0"
              End="198.166666666667,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.0727816550349" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.0727816550349"
                    Point2="0,23.0727816550349"
                    Point3="4,23.0727816550349" />
                  <mssgle:LineSegment
                    End="194.166666666667,23.0727816550349" />
                  <mssgle:CubicBezierSegment
                    Point1="194.166666666667,23.0727816550349"
                    Point2="198.166666666667,23.0727816550349"
                    Point3="198.166666666667,27.0727816550349" />
                  <mssgle:LineSegment
                    End="198.166666666667,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="91.0833333333333,28.0727816550349,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load file from HR\Load staging table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Load file from HR\Load staging table\OLE DB Destination"
          TopLeft="452,363" />
        <NodeLayout
          Size="176,42"
          Id="Package\Load file from HR\Load staging table\Derived Column"
          TopLeft="452,295" />
        <NodeLayout
          Size="173,42"
          Id="Package\Load file from HR\Load staging table\Excel Source"
          TopLeft="451,91" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load file from HR\Load staging table\Data Conversion"
          TopLeft="449,159" />
        <NodeLayout
          Size="175,42"
          Id="Package\Load file from HR\Load staging table\Script Component"
          TopLeft="451,225" />
        <EdgeLayout
          Id="Package\Load file from HR\Load staging table.Paths[Output 0]"
          TopLeft="539.25,267">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load file from HR\Load staging table.Paths[Excel Source Output]"
          TopLeft="537.5,133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load file from HR\Load staging table.Paths[Derived Column Output]"
          TopLeft="540.25,337">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load file from HR\Load staging table.Paths[Data Conversion Output]"
          TopLeft="538,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24"
              Start="0,0"
              End="0,16.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load file from HR\Load staging table\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load file from HR\Load staging table\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>